version: "3.6"
services:
      
  elasticsearch:
    #image: elasticsearch:5.6.11
    #note that the docker hub version doesn't allow restores for some reason...
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.13
    ports:
      - 9200:9200
    environment:
      # assign more memory to JVM 
      - "ES_JAVA_OPTS=-Xms12g -Xmx12g"
      #disable xpack as not OSS
      - "xpack.security.enabled=false"
      #disable memory swapping to disk for performance
      - "bootstrap.memory_lock=true"
      #increase the buffer is used to store newly indexed documents
      #defaults to 10% of heap but more is better for heavy indexing
      - "indices.memory.index_buffer_size=4g"
      #allow downloading from google buckets
      - repositories.url.allowed_urls=https://storage.googleapis.com/*,https://*.amazonaws.com/*
    volumes:
      #use a volume for persistence / performance
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      #disable memory swapping to disk for performance
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9200"]
      interval: 30s
      timeout: 500s
      retries:  30
        
  kibana:
    image: kibana:5.6.13
    ports:
      - 5601:5601
    environment:
      #disable xpack as not OSS
      - xpack.security.enabled=false
    depends_on:
      - elasticsearch

  redis:
    image: redis
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 1s
      timeout: 60s
      retries: 60
    
  mrtarget:
    image: mrtarget:latest
    build:
      context: ./
    depends_on:
      - elasticsearch
      - redis
    environment:
      - ELASTICSEARCH_NODES=http://elasticsearch:9200
      - CTTV_REDIS_REMOTE=true
      - CTTV_REDIS_SERVER=redis:6379
    volumes:
      - ./log:/usr/src/app/log
      - ./json:/usr/src/app/json
      - ./qc:/usr/src/app/qc

volumes:
  esdata:
    driver: local
